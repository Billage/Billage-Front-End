"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _tslib = require("tslib");

var React = _interopRequireWildcard(require("react"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var getJSApi = function getJSApi() {
  return new Promise(function (resolve, reject) {
    var _a, _b;

    if (typeof window === 'undefined') reject({
      message: 'unsupported platform'
    }); // @ts-ignore

    var postcodeSDK = (_a = window.daum) === null || _a === void 0 ? void 0 : _a.Postcode;

    if (postcodeSDK) {
      resolve(postcodeSDK);
      return;
    }

    var jsapi = document.createElement('script');
    jsapi.type = 'text/javascript';
    jsapi.src = '//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js';
    var s = document.getElementsByTagName('script')[0];
    (_b = s === null || s === void 0 ? void 0 : s.parentNode) === null || _b === void 0 ? void 0 : _b.insertBefore(jsapi, s); // @ts-ignore

    jsapi.onload = function () {
      return resolve(window.daum.Postcode);
    };

    jsapi.onabort = jsapi.onerror = reject;
  });
};

var Postcode = function Postcode(_a) {
  var onSelected = _a.onSelected,
      jsOptions = _a.jsOptions,
      style = _a.style;
  var layer = React.useRef(null);
  var loadData = React.useCallback(function () {
    return (0, _tslib.__awaiter)(void 0, void 0, void 0, function () {
      var Postcode;
      return (0, _tslib.__generator)(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4
            /*yield*/
            , getJSApi()];

          case 1:
            Postcode = _a.sent();

            if (Postcode) {
              // @ts-ignore
              new window.daum.Postcode((0, _tslib.__assign)((0, _tslib.__assign)({}, jsOptions), {
                oncomplete: function oncomplete(data) {
                  onSelected(data);
                },
                onclose: function onclose() {
                  loadData();
                }
              })).embed(layer.current, {
                autoClose: false
              });
            }

            return [2
            /*return*/
            ];
        }
      });
    });
  }, []);
  React.useEffect(function () {
    loadData()["catch"](console.warn);
  }, [loadData]); // @ts-ignore

  return React.createElement("div", {
    ref: layer,
    style: style
  });
};

var _default = Postcode;
exports["default"] = _default;