{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport moment from \"moment\";\nconst NEW_CHAT_MESSAGE_EVENT = \"newChatMessage\";\nconst SOCKET_SERVER_URL = \"http://localhost:4000\";\n\nconst useChat = roomId => {\n  _s();\n\n  const [messages, setMessages] = useState([]);\n  const socketRef = useRef();\n  useEffect(() => {\n    socketRef.current = socketIOClient(SOCKET_SERVER_URL, {\n      query: {\n        roomId\n      }\n    });\n    socketRef.current.on(NEW_CHAT_MESSAGE_EVENT, message => {\n      const incomingMessage = { ...message,\n        ownedByCurrentUser: message.senderId === socketRef.current.id //채팅 보낸사람이 자기 자신\n\n      };\n      setMessages(messages => [...messages, incomingMessage]);\n    });\n    return () => {\n      socketRef.current.disconnect();\n    };\n  }, [roomId]);\n\n  const sendMessage = messageBody => {\n    socketRef.current.emit(NEW_CHAT_MESSAGE_EVENT, {\n      body: messageBody,\n      senderId: socketRef.current.id,\n      timeStamp: moment().format('YYYY-MM-DD hh:mm'),\n      date: moment().format('YYYY년 MM월 DD일')\n    });\n  };\n\n  return {\n    messages,\n    sendMessage\n  };\n};\n\n_s(useChat, \"rJUxOyV7d92WYkbiDZQ/Q3CnO+M=\");\n\nexport default useChat;","map":{"version":3,"sources":["C:/Users/sycho/Desktop/billage/Front-End/src/useChat.js"],"names":["useEffect","useRef","useState","socketIOClient","moment","NEW_CHAT_MESSAGE_EVENT","SOCKET_SERVER_URL","useChat","roomId","messages","setMessages","socketRef","current","query","on","message","incomingMessage","ownedByCurrentUser","senderId","id","disconnect","sendMessage","messageBody","emit","body","timeStamp","format","date"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,MAAMC,sBAAsB,GAAG,gBAA/B;AACA,MAAMC,iBAAiB,GAAG,uBAA1B;;AAEA,MAAMC,OAAO,GAAIC,MAAD,IAAY;AAAA;;AACxB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMS,SAAS,GAAGV,MAAM,EAAxB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,SAAS,CAACC,OAAV,GAAoBT,cAAc,CAACG,iBAAD,EAAoB;AACtDO,MAAAA,KAAK,EAAE;AAAEL,QAAAA;AAAF;AAD+C,KAApB,CAAlC;AAIAG,IAAAA,SAAS,CAACC,OAAV,CAAkBE,EAAlB,CAAqBT,sBAArB,EAA8CU,OAAD,IAAa;AAC1D,YAAMC,eAAe,GAAG,EACpB,GAAGD,OADiB;AAEpBE,QAAAA,kBAAkB,EAAEF,OAAO,CAACG,QAAR,KAAqBP,SAAS,CAACC,OAAV,CAAkBO,EAFvC,CAE4C;;AAF5C,OAAxB;AAIAT,MAAAA,WAAW,CAAED,QAAD,IAAc,CAAC,GAAGA,QAAJ,EAAcO,eAAd,CAAf,CAAX;AACC,KAND;AAQA,WAAO,MAAM;AACbL,MAAAA,SAAS,CAACC,OAAV,CAAkBQ,UAAlB;AACC,KAFD;AAIH,GAjBQ,EAiBN,CAACZ,MAAD,CAjBM,CAAT;;AAmBA,QAAMa,WAAW,GAAIC,WAAD,IAAiB;AAC7BX,IAAAA,SAAS,CAACC,OAAV,CAAkBW,IAAlB,CAAuBlB,sBAAvB,EAA+C;AAC/CmB,MAAAA,IAAI,EAAEF,WADyC;AAE/CJ,MAAAA,QAAQ,EAAEP,SAAS,CAACC,OAAV,CAAkBO,EAFmB;AAG/CM,MAAAA,SAAS,EAAGrB,MAAM,GAAGsB,MAAT,CAAgB,kBAAhB,CAHmC;AAI/CC,MAAAA,IAAI,EAAGvB,MAAM,GAAGsB,MAAT,CAAgB,eAAhB;AAJwC,KAA/C;AAMP,GAPD;;AASA,SAAO;AAAEjB,IAAAA,QAAF;AAAYY,IAAAA;AAAZ,GAAP;AACH,CAjCD;;GAAMd,O;;AAmCN,eAAeA,OAAf","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport moment from \"moment\";\r\n\r\nconst NEW_CHAT_MESSAGE_EVENT = \"newChatMessage\";\r\nconst SOCKET_SERVER_URL = \"http://localhost:4000\";\r\n\r\nconst useChat = (roomId) => {\r\n    const [messages, setMessages] = useState([]);\r\n    const socketRef = useRef();\r\n\r\n    useEffect(() => {\r\n        socketRef.current = socketIOClient(SOCKET_SERVER_URL, {\r\n        query: { roomId },\r\n        });\r\n\r\n        socketRef.current.on(NEW_CHAT_MESSAGE_EVENT, (message) => {\r\n        const incomingMessage = {\r\n            ...message,\r\n            ownedByCurrentUser: message.senderId === socketRef.current.id,  //채팅 보낸사람이 자기 자신\r\n        };\r\n        setMessages((messages) => [...messages, incomingMessage]);\r\n        });\r\n\r\n        return () => {\r\n        socketRef.current.disconnect();\r\n        };\r\n        \r\n    }, [roomId]);\r\n\r\n    const sendMessage = (messageBody) => {\r\n            socketRef.current.emit(NEW_CHAT_MESSAGE_EVENT, {\r\n            body: messageBody,\r\n            senderId: socketRef.current.id,\r\n            timeStamp : moment().format('YYYY-MM-DD hh:mm'),\r\n            date : moment().format('YYYY년 MM월 DD일'), \r\n        });\r\n    };\r\n\r\n    return { messages, sendMessage };\r\n};\r\n\r\nexport default useChat;"]},"metadata":{},"sourceType":"module"}