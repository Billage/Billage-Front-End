{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sycho\\\\Desktop\\\\billage\\\\Front-End\\\\src\\\\components\\\\MyInfoEdit.jsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useCallback, useState } from 'react';\nimport Logo from './Logo';\nimport axios from 'axios';\nimport Postcode from '@actbase/react-daum-postcode';\nimport Modal from 'react-modal';\nimport styled from \"styled-components\";\nimport { DownOutlined, UpOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Page = styled.body`\n    margin:0;\n    padding:20px;\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n`;\n_c = Page;\nconst InputComponent = styled.input`\n    border:none;\n    outline:none;\n    border-bottom: 1px solid #E5E5E5;\n    ::placeholder{\n        color:#E5E5E5;\n    }\n    width:250px;\n    height:40px;\n    margin-bottom:10px;\n`;\n_c2 = InputComponent;\nconst Label = styled.h2`  \nfont-size:14px;\ncolor:#7D7D7D;\nfont-weight:600;\n`;\n_c3 = Label;\nconst SubmitButton = styled.button`\n    margin-top:30px;\n    border:none;\n    width:350px;\n    height:50px;\n    background-color:#A352CC;\n    border-radius:5px;\n    color:white;\n    font-weight:bold;\n    font-size:18px;\n    text-align:center;\n`;\n_c4 = SubmitButton;\nconst Btn = styled.button`\n    border: 1px solid #EBCAFD;\n    background-color:white;\n    color:#EBCAFD;\n    width:80px;\n    height:30px;\n    border-radius:5px;\n    margin-left:12px;\n`;\n_c5 = Btn;\nconst CloseBtn = styled.div`\n     position:fixed;\n    top:0;\n    right:0;\n    height:20px;\n    margin:5px 10px 0px 0px;\n    padding:auto;\n    background:none;\n    color:#E5E5E5;\n    width:20px;\n    font-weight:bold;\n    text-align:center;\n    border-radius:2px;\n    cursor:pointer;\n`;\n_c6 = CloseBtn;\n\nconst MyInfoEdit = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const useInput = (initValue = null) => {\n    _s();\n\n    const [value, setter] = useState(initValue);\n\n    const handler = e => {\n      if (e) setter(e.target.value);else setter(initValue);\n    };\n\n    return [value, handler];\n  };\n\n  _s(useInput, \"HWjoxsPwAOqCQsuN2WPzTx92b6A=\");\n\n  const [email, setEmail] = useInput('');\n  const [id, setId] = useInput('');\n  const [pw, setPw] = useInput('');\n  const [nickname, setNickname] = useInput('');\n  const [showAddress, setShowAddress] = useState('');\n  const [fullAddress, setFullAddress] = useState(''); //주소의 경우, 사용자에게 보여주는 것은 showAddress로 '##동'으로만 나오고, full 주소는 fullAddress에 저장됩니다.\n\n  const [pwChk, setPwChk] = useState('');\n  const [pwError, setPwError] = useState(false);\n  const [chkEmail, setChkEmail] = useState(false);\n  const [chkNickname, setChkNickname] = useState(false);\n  const [chkId, setChkId] = useState(false); // const pwChkRef=useRef();\n  // const pwRef=useRef();\n\n  const [showPwd, setShowPwd] = useState(false); //비밀번호 설정 칸 보이는 여부\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n\n    if (!(email && id && pw && pwChk && nickname && fullAddress)) {\n      alert(`모든 문항을 입력해주세요`);\n      return;\n    } else {\n      //  입력하지 않은 문항 알려주는 것 추가 예정\n      if (!/^[A-Za-z0-9]{6,12}$/.test(pw)) {\n        alert('영문, 숫자 포함 6-12자리의 비밀번호를 입력해주세요.');\n        return;\n      }\n\n      if (!chkEmail) {\n        alert('이메일 중복확인을 완료해주세요.');\n        return;\n      }\n\n      if (!chkId) {\n        alert('아이디 중복확인을 완료해주세요.');\n        return;\n      }\n\n      if (!chkNickname) {\n        alert('닉네임 중복확인을 완료해주세요.');\n        return;\n      }\n\n      axios.post('url을 입력해주세요', {\n        email: email,\n        id: id,\n        password: pw,\n        nickname: nickname,\n        address: fullAddress,\n        showAddress: showAddress\n      }).then(res => {\n        console.log(res);\n      }).catch(error => {\n        console.log(error);\n      });\n      alert('가입을 환영합니다!');\n    }\n  };\n\n  const onChangeChkPw = e => {\n    if (!pw) {\n      alert('비밀번호를 먼저 입력해주세요.');\n      setPwChk('');\n    } else {\n      setPwError(e.target.value !== pw);\n      setPwChk(e.target.value);\n    }\n  };\n\n  const [isModal, setModal] = useState(false);\n\n  const modal = e => {\n    e.preventDefault();\n    if (isModal) setModal(false);else setModal(true);\n  };\n\n  const onClickChk = e => {\n    e.preventDefault();\n\n    if (e.target.value === 'email') {\n      //이메일 정보 받아오는 곳\n      if (!email) {\n        alert('입력창에 먼저 입력해주세요.');\n        return;\n      } else if (!/^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i.test(email)) {\n        //이메일 형식에 맞는 값이 들어왔는지 확인합니다.\n        alert('올바르지 않은 이메일입니다. 다시 입력해주세요.');\n        setEmail('');\n        return;\n      } else {\n        //여기에서 axios 통신하시고, 아래 주석처리된 if문 괄호도 채워서 주석 해제해주세요\n        axios.get('').then(res => {//성공적으로 통신했을 때\n          // if() { //이미 저장된 이메일이 아니라면\n          //     alert('사용 가능한 이메일입니다.');\n          //     setChkEmail(true);\n          // } else{ //이미 저장된 이메일이라면 \n          //     alert('이미 사용중인 이메일입니다.');\n          //     setEmail('');\n          // }\n        }).catch(error => {\n          console.log(error);\n        }); //에러처리\n      }\n    } else if (e.target.value === 'nickname') {\n      //닉네임 정보 받아오는 곳\n      if (!nickname) {\n        alert('입력창에 먼저 입력해주세요.');\n        return;\n      } else {\n        //여기에서 axios 통신하시고, 아래 주석처리된 if문 괄호도 채워서 주석 해제해주세요\n        axios.get('').then(res => {//성공적으로 통신했을 때\n          // if() { //이미 저장된 닉네임이 아니라면\n          //     alert('사용 가능한 닉네임입니다.');\n          //     setChkNickname(true);\n          // } else{ //이미 저장된 닉네임이라면 \n          //     alert('이미 사용중인 닉네임입니다.');\n          //     setNickname('');\n          // }\n        }).catch(error => {\n          console.log(error);\n        }); //에러처리\n      }\n    } else if (e.target.value === 'id') {\n      //아이디 정보 받아오는 곳\n      if (!id) {\n        alert('입력창에 먼저 입력해주세요.');\n        return;\n      } else {\n        //여기에서 axios 통신하시고, 아래 주석처리된 if문 괄호도 채워서 주석 해제해주세요\n        axios.get('').then(res => {//성공적으로 통신했을 때\n          // if() { //이미 저장된 아이디가 아니라면\n          //     alert('사용 가능한 아이디입니다.');\n          //     setChkNickname(true);\n          // } else{ //이미 저장된 아이디라면 \n          //     alert('이미 사용중인 아이디입니다.');\n          //     setNickname('');\n          // }\n        }).catch(error => {\n          console.log(error);\n        }); //에러처리\n      }\n    }\n  };\n\n  const clickPwd = e => {\n    e.preventDefault();\n    const btn = document.getElementById('pwdBtn');\n\n    if (!showPwd) {\n      setShowPwd(true);\n      btn.innertext = '취소';\n    } else setShowPwd(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Page, {\n    children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        children: \"\\uC544\\uC774\\uB514\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(InputComponent, {\n        onChange: setId,\n        value: 1234,\n        name: \"id\",\n        label: \"\\uC544\\uC774\\uB514\",\n        readOnly: true,\n        style: {\n          color: '#7D7D7D'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        style: {\n          display: 'inline'\n        },\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uBCC0\\uACBD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'inline',\n          color: '#7D7D7D'\n        },\n        children: /*#__PURE__*/_jsxDEV(DownOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 58\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 10\n      }, this), showPwd ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(InputComponent, {\n          value: pw,\n          onChange: setPw,\n          name: \"newPassword\",\n          label: \"\\uC0C8\\uB85C\\uC6B4 \\uBE44\\uBC00\\uBC88\\uD638\",\n          placeholder: \"\\uC601\\uBB38, \\uC22B\\uC790 \\uD3EC\\uD568 6-12\\uC790\\uB9AC\",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Label, {\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(InputComponent, {\n          value: pwChk,\n          onChange: onChangeChkPw,\n          name: \"passwordChk\",\n          label: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 5\n        }, this), pwError && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: '#F79F81',\n            fontSize: '10px'\n          },\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 16\n      }, this) : null, /*#__PURE__*/_jsxDEV(Label, {\n        children: \"\\uB2C9\\uB124\\uC784\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(InputComponent, {\n        onChange: setNickname,\n        value: nickname,\n        name: \"nickname\",\n        label: \"\\uB2C9\\uB124\\uC784\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Btn, {\n        onClick: onClickChk,\n        value: \"nickname\",\n        children: \"\\uC911\\uBCF5\\uD655\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        children: \"\\uC8FC\\uC18C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(InputComponent, {\n        onChange: setShowAddress,\n        value: showAddress,\n        name: \"showAddress\",\n        label: \"\\uC8FC\\uC18C\",\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Btn, {\n        onClick: modal,\n        children: \"\\uC8FC\\uC18C\\uCC3E\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isModal,\n        style: {\n          width: '150px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Postcode, {\n          style: {\n            width: 320,\n            height: 320\n          },\n          jsOptions: {\n            animated: true,\n            hemaileMapBtn: true\n          },\n          onSelected: data => {\n            setShowAddress(data.bname);\n            setFullAddress(data.address);\n            setModal(false);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(CloseBtn, {\n          onClick: modal,\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(SubmitButton, {\n          onClick: onSubmitForm,\n          children: \"\\uC218\\uC815\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(MyInfoEdit, \"AdqUzGNZPm0AWDMI+fije26MUYI=\", true);\n\n_c7 = MyInfoEdit;\nexport default MyInfoEdit;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Page\");\n$RefreshReg$(_c2, \"InputComponent\");\n$RefreshReg$(_c3, \"Label\");\n$RefreshReg$(_c4, \"SubmitButton\");\n$RefreshReg$(_c5, \"Btn\");\n$RefreshReg$(_c6, \"CloseBtn\");\n$RefreshReg$(_c7, \"MyInfoEdit\");","map":{"version":3,"sources":["C:/Users/sycho/Desktop/billage/Front-End/src/components/MyInfoEdit.jsx"],"names":["React","useCallback","useState","Logo","axios","Postcode","Modal","styled","DownOutlined","UpOutlined","Page","body","InputComponent","input","Label","h2","SubmitButton","button","Btn","CloseBtn","div","MyInfoEdit","useInput","initValue","value","setter","handler","e","target","email","setEmail","id","setId","pw","setPw","nickname","setNickname","showAddress","setShowAddress","fullAddress","setFullAddress","pwChk","setPwChk","pwError","setPwError","chkEmail","setChkEmail","chkNickname","setChkNickname","chkId","setChkId","showPwd","setShowPwd","onSubmitForm","preventDefault","alert","test","post","password","address","then","res","console","log","catch","error","onChangeChkPw","isModal","setModal","modal","onClickChk","get","clickPwd","btn","document","getElementById","innertext","color","display","fontSize","width","height","animated","hemaileMapBtn","data","bname"],"mappings":"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","sourcesContent":["import React, {useCallback, useState} from 'react';\r\nimport Logo from './Logo';\r\nimport axios from 'axios';\r\nimport Postcode from '@actbase/react-daum-postcode';\r\nimport Modal from 'react-modal';\r\nimport styled from \"styled-components\";\r\nimport {DownOutlined, UpOutlined } from '@ant-design/icons';\r\nconst Page=styled.body`\r\n    margin:0;\r\n    padding:20px;\r\n    display:flex;\r\n    flex-direction:column;\r\n    align-items:center;\r\n`;\r\nconst InputComponent=styled.input`\r\n    border:none;\r\n    outline:none;\r\n    border-bottom: 1px solid #E5E5E5;\r\n    ::placeholder{\r\n        color:#E5E5E5;\r\n    }\r\n    width:250px;\r\n    height:40px;\r\n    margin-bottom:10px;\r\n`;\r\nconst Label=styled.h2`  \r\nfont-size:14px;\r\ncolor:#7D7D7D;\r\nfont-weight:600;\r\n`;\r\n\r\nconst SubmitButton=styled.button`\r\n    margin-top:30px;\r\n    border:none;\r\n    width:350px;\r\n    height:50px;\r\n    background-color:#A352CC;\r\n    border-radius:5px;\r\n    color:white;\r\n    font-weight:bold;\r\n    font-size:18px;\r\n    text-align:center;\r\n`;\r\nconst Btn=styled.button`\r\n    border: 1px solid #EBCAFD;\r\n    background-color:white;\r\n    color:#EBCAFD;\r\n    width:80px;\r\n    height:30px;\r\n    border-radius:5px;\r\n    margin-left:12px;\r\n`;\r\n\r\nconst CloseBtn=styled.div`\r\n     position:fixed;\r\n    top:0;\r\n    right:0;\r\n    height:20px;\r\n    margin:5px 10px 0px 0px;\r\n    padding:auto;\r\n    background:none;\r\n    color:#E5E5E5;\r\n    width:20px;\r\n    font-weight:bold;\r\n    text-align:center;\r\n    border-radius:2px;\r\n    cursor:pointer;\r\n`;\r\nconst MyInfoEdit=()=>{\r\n    const useInput = (initValue = null) =>{\r\n        const [value,setter] = useState(initValue);\r\n       \r\n        const handler = (e) => {\r\n            if(e) setter(e.target.value);\r\n            else setter(initValue);\r\n        };\r\n        return [value,handler];\r\n    };\r\n   \r\n    \r\n    const [email,setEmail] = useInput('');\r\n    const [id, setId]=useInput('');\r\n    const [pw,setPw] = useInput('');\r\n    const [nickname,setNickname] = useInput('');\r\n    const [showAddress,setShowAddress] =  useState('');\r\n    const [fullAddress,setFullAddress]=useState('');\r\n    //주소의 경우, 사용자에게 보여주는 것은 showAddress로 '##동'으로만 나오고, full 주소는 fullAddress에 저장됩니다.\r\n    const [pwChk,setPwChk]=useState('');\r\n    const [pwError,setPwError]=useState(false);\r\n    const [chkEmail,setChkEmail]=useState(false);\r\n    const [chkNickname,setChkNickname]=useState(false);\r\n    const [chkId,setChkId]=useState(false);\r\n    // const pwChkRef=useRef();\r\n    // const pwRef=useRef();\r\n    const [ showPwd, setShowPwd ] = useState(false) //비밀번호 설정 칸 보이는 여부\r\n\r\n\r\n    const onSubmitForm=(e)=>{\r\n        e.preventDefault();\r\n        if(!(email&&id&&pw&&pwChk&&nickname&&fullAddress)){\r\n            alert(`모든 문항을 입력해주세요`);\r\n            return;\r\n        }\r\n        else{\r\n        //  입력하지 않은 문항 알려주는 것 추가 예정\r\n        if(!/^[A-Za-z0-9]{6,12}$/.test(pw)){\r\n            alert('영문, 숫자 포함 6-12자리의 비밀번호를 입력해주세요.');\r\n            return;\r\n        }\r\n        if(!chkEmail){\r\n            alert('이메일 중복확인을 완료해주세요.');\r\n            return;\r\n        }\r\n        if(!chkId){\r\n            alert('아이디 중복확인을 완료해주세요.');\r\n            return;\r\n        }\r\n        if(!chkNickname){\r\n            alert('닉네임 중복확인을 완료해주세요.');\r\n            return;\r\n        }\r\n        axios.post('url을 입력해주세요', {\r\n                email: email,\r\n                id:id,\r\n                password: pw,\r\n                nickname:nickname,\r\n                address:fullAddress,\r\n                showAddress:showAddress,\r\n            }\r\n          ).then( (res) => {\r\n            console.log(res);\r\n          })\r\n          .catch( (error)=> {\r\n           console.log(error);\r\n          });\r\n    \r\n       alert('가입을 환영합니다!');\r\n        \r\n    }\r\n};\r\n    const onChangeChkPw=(e)=>{\r\n        if(!pw) {\r\n            alert('비밀번호를 먼저 입력해주세요.');\r\n            setPwChk('');\r\n        }\r\n        else{\r\n        setPwError(e.target.value!==pw);\r\n        setPwChk(e.target.value);\r\n        }\r\n    };\r\n    const [isModal, setModal] = useState(false);\r\n    const modal=(e)=>{\r\n        e.preventDefault();\r\n        if(isModal) setModal(false);\r\n        else setModal(true);\r\n    };\r\n\r\n    const onClickChk=(e)=>{\r\n        e.preventDefault();\r\n        if(e.target.value==='email'){ //이메일 정보 받아오는 곳\r\n            if(!email) {\r\n                alert('입력창에 먼저 입력해주세요.');\r\n                return;\r\n            }else if(!/^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i.test(email)){\r\n                //이메일 형식에 맞는 값이 들어왔는지 확인합니다.\r\n                alert('올바르지 않은 이메일입니다. 다시 입력해주세요.');\r\n                setEmail('');\r\n                return;\r\n            }else{ //여기에서 axios 통신하시고, 아래 주석처리된 if문 괄호도 채워서 주석 해제해주세요\r\n                axios.get('')\r\n                .then((res)=> { //성공적으로 통신했을 때\r\n                    // if() { //이미 저장된 이메일이 아니라면\r\n                    //     alert('사용 가능한 이메일입니다.');\r\n                    //     setChkEmail(true);\r\n                    // } else{ //이미 저장된 이메일이라면 \r\n                    //     alert('이미 사용중인 이메일입니다.');\r\n                    //     setEmail('');\r\n                    // }\r\n                })\r\n                .catch((error)=> { console.log(error); }) //에러처리\r\n            }\r\n        }\r\n    \r\n        else if(e.target.value==='nickname'){ //닉네임 정보 받아오는 곳\r\n            if(!nickname) {\r\n                alert('입력창에 먼저 입력해주세요.');\r\n                return;\r\n            }\r\n            else{ //여기에서 axios 통신하시고, 아래 주석처리된 if문 괄호도 채워서 주석 해제해주세요\r\n                axios.get('')\r\n                .then((res)=> { //성공적으로 통신했을 때\r\n                    // if() { //이미 저장된 닉네임이 아니라면\r\n                    //     alert('사용 가능한 닉네임입니다.');\r\n                    //     setChkNickname(true);\r\n                    // } else{ //이미 저장된 닉네임이라면 \r\n                    //     alert('이미 사용중인 닉네임입니다.');\r\n                    //     setNickname('');\r\n                    // }\r\n                })\r\n                .catch((error)=> { console.log(error); }) //에러처리\r\n            }\r\n        }\r\n        else if(e.target.value==='id'){ //아이디 정보 받아오는 곳\r\n            if(!id) {\r\n                alert('입력창에 먼저 입력해주세요.');\r\n                return;\r\n            } else{ //여기에서 axios 통신하시고, 아래 주석처리된 if문 괄호도 채워서 주석 해제해주세요\r\n                axios.get('')\r\n                .then((res)=> { //성공적으로 통신했을 때\r\n                    // if() { //이미 저장된 아이디가 아니라면\r\n                    //     alert('사용 가능한 아이디입니다.');\r\n                    //     setChkNickname(true);\r\n                    // } else{ //이미 저장된 아이디라면 \r\n                    //     alert('이미 사용중인 아이디입니다.');\r\n                    //     setNickname('');\r\n                    // }\r\n                })\r\n                .catch((error)=> { console.log(error); }) //에러처리\r\n            }\r\n        }\r\n\r\n    };\r\n    const clickPwd=(e)=>{\r\n        e.preventDefault();\r\n        const btn=document.getElementById('pwdBtn');\r\n       if(!showPwd){\r\n            setShowPwd(true);\r\n            btn.innertext='취소';\r\n\r\n       }else  setShowPwd(false);\r\n\r\n    };\r\n    return(\r\n    <Page >\r\n    <Logo />\r\n    <form>\r\n    <Label>아이디</Label>\r\n    <InputComponent   \r\n        onChange={setId}\r\n        value={1234}\r\n        name=\"id\" \r\n        label=\"아이디\" \r\n        readOnly \r\n        style={{color:'#7D7D7D'}}/>\r\n         <Label style={{display:'inline'}}>비밀번호 변경</Label>\r\n         <div style={{display:'inline',color:'#7D7D7D'}}><DownOutlined /></div>\r\n    {showPwd ? <div>\r\n    <InputComponent \r\n        value={pw}\r\n        onChange={setPw}\r\n        name=\"newPassword\"\r\n        label=\"새로운 비밀번호\" \r\n        placeholder=\"영문, 숫자 포함 6-12자리\"\r\n        type=\"password\"\r\n       />\r\n    <Label>비밀번호 확인</Label>\r\n    <InputComponent  \r\n        value={pwChk}\r\n        onChange={onChangeChkPw}\r\n        name=\"passwordChk\" \r\n        label=\"비밀번호 확인\" \r\n        type=\"password\"/>\r\n    {pwError&&<div style={{color : '#F79F81', fontSize: '10px'}}>비밀번호가 일치하지 않습니다.</div>}\r\n    </div> : null}\r\n    <Label>닉네임</Label>\r\n    <InputComponent   \r\n        onChange={setNickname}\r\n        value={nickname}\r\n        name=\"nickname\" \r\n        label=\"닉네임\" />\r\n    <Btn onClick={onClickChk}  value=\"nickname\">중복확인</Btn>\r\n    <Label>주소</Label>\r\n         <InputComponent   \r\n        onChange={setShowAddress}\r\n        value={showAddress}\r\n        name=\"showAddress\" \r\n        label=\"주소\" \r\n        readOnly\r\n        />\r\n        <Btn onClick={modal}>주소찾기</Btn>\r\n    {/* <div> */}\r\n     <Modal isOpen={isModal} style={{width:'150px'}}>\r\n        <Postcode\r\n         style={{ width: 320, height: 320 }}\r\n          jsOptions={{ animated: true, hemaileMapBtn: true }}\r\n          onSelected={data => {\r\n            setShowAddress(data.bname);\r\n            setFullAddress(data.address);\r\n            setModal(false);\r\n          }}\r\n        />\r\n        <CloseBtn onClick={modal}>X</CloseBtn>\r\n      </Modal>\r\n      {/* </div> */}\r\n    <div>\r\n    <SubmitButton \r\n        onClick={onSubmitForm}>\r\n           수정\r\n    </SubmitButton>\r\n    </div>\r\n    </form>\r\n    </Page>\r\n    );\r\n}\r\nexport default MyInfoEdit;"]},"metadata":{},"sourceType":"module"}