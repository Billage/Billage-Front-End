{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sycho\\\\Desktop\\\\billage\\\\Front-End\\\\src\\\\components\\\\Scrap.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport BoardNav from './BoardNav';\nimport styled from \"styled-components\";\nimport axios from 'axios';\nimport PostComponent from './PostComponent';\nimport PostComponent2 from './PostComponent2';\nimport { Link } from 'react-router-dom';\nimport { findAllByTestId } from '@testing-library/react'; //검색박스 전체 (회색 둥글둥글 모양) 스타일링입니다.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SearchBox = styled.div`\n\n    position:relative;\n    background-color:#E5E5E5;\n    border-radius:20px;\n    margin:-15px 15px 10px 15px;\n    padding:5px 5px 5px 20px;\n    height:25px;\n    display:flex;\n    align-items:center;\n    justify-content:flex-end;\n\n    `; //위의 검색박스 내의 input 창 스타일링입니다.\n\nconst Input = styled.input`\n    width:95%;\n    outline:none;\n    border:none;\n    border-radius:20px;\n    height:25px;\n    background:none;\n`; //이미지 태그 (각 버튼들에 들어가는 아이콘) 대신 쓰는 component입니다.\n\nexport const Img = styled.img`\nmax-width: 100%;\nheight:auto;\n`; //각 버튼들 (글 등록, )\n\nconst StyledButton = styled.button`\n    border:none;\n    margin:2px;\n    background:none;\n    height:30px;\n    width:30px;\n    padding-top:5px;\n    background:none;\n    color:#7D7D7D;\n    font-weight:bold;\n`; //게시글 리스트 component 입니다.\n\nconst List = styled.div`\nfont-family:'KoddiUDOnGothic-Regular';\n`; //메뉴 스타일\n\n_c = List;\nconst MenuStyled = styled.div`\n    display:flex;\n    justify-content:space-evenly;\n    \n`; //스크롤 할때 상단 고정\n\n_c2 = MenuStyled;\nconst PageStyled = styled.div`\n    position: sticky;\n    top: 0px;\n    z-index: 1;\n    background-color: white;\n`;\n_c3 = PageStyled;\n\nconst Scrap = () => {\n  _s();\n\n  const [showAddress, setShowAddress] = useState(''); //현재 사용자의 주소\n\n  const [searchText, setSearchText] = useState(''); //검색 input 창에 입력되는 text\n\n  const [lendYouList, setLendYouList] = useState([]); //빌려줄게요 리스트. 백엔드에서 가져온 데이터 담는 배열\n\n  const [borrowMeList, setBorrowMeList] = useState([]); //빌려주세요 리스트\n\n  const [fontStyle1, setFontStyle1] = useState({\n    color: \"black\",\n    fontWeight: \"bold\"\n  });\n  const [fontStyle2, setFontStyle2] = useState({\n    color: \"gray\"\n  });\n  const [lendBtn, setLendBtn] = useState(true); //현재 빌려줄게요 게시판인지 확인\n\n  const [borrowBtn, setBorrowBtn] = useState(false); //현재 빌려주세요 게시판인지 확인\n\n  const [search, setSearch] = useState(false); // 검색 버튼이 눌렸는지 확인하는 변수\n\n  const [filteredPost, setFilteredPost] = useState([]); //검색한 post 를 담는 배열\n\n  const onClickMenu1 = e => {\n    e.preventDefault();\n    setFontStyle1({\n      color: \"black\",\n      fontWeight: \"bold\"\n    });\n    setFontStyle2({\n      color: \"gray\"\n    });\n    setLendBtn(true);\n    setBorrowBtn(false);\n    setSearch(false);\n  };\n\n  const onClickMenu2 = e => {\n    e.preventDefault();\n    setFontStyle1({\n      color: \"gray\"\n    });\n    setFontStyle2({\n      color: \"black\",\n      fontWeight: \"bold\"\n    });\n    setBorrowBtn(true);\n    setLendBtn(false);\n    setSearch(false);\n  };\n\n  const [isLogined, setIsLogined] = useState(false); // 빌려줄게요 게시판 찜목록입니다.\n\n  const getLendYou = async loginChk => {\n    if (loginChk) {\n      //로그인이 되어있는 상태에서는 사용자가 찜한 목록\n      return axios.get(\"https://reqres.in/api/users?page=2\", {\n        //테스트용 url 입니다. 바꿔주세요.\n        params: {\n          //user 정보가 없어서 오류 나서 주석처리해놓았습니다. 아래주석 풀어주세요.\n          // user.showAddress:showAddress, //사용자와 같은 동 내에서 쓴 글만 보여줌\n          board: 1 ////빌려줄게요 게시판 코드\n\n        }\n      });\n    } else {\n      //로그인이 되어있지 않은 상태\n      return axios.get(\"https://reqres.in/api/login\", {\n        //테스트용 url 입니다. 바꿔주세요.\n        params: {\n          board: 1 //빌려줄게요 게시판 코드\n\n        }\n      });\n    }\n  }; // 빌려주세요 게시판 찜목록입니다.\n\n\n  const getBorrowMe = async loginChk => {\n    if (loginChk) {\n      //로그인이 되어있는 상태에서는 사용자가 찜한 목록 \n      return axios.get(\"https://reqres.in/api/users?page=2\", {\n        //테스트용 url 입니다. 바꿔주세요.\n        params: {\n          //user 정보가 없어서 오류 나서 주석처리해놓았습니다. 아래주석 풀어주세요.\n          // user.showAddress:showAddress, //사용자와 같은 동 내에서 쓴 글만 보여줌\n          //여기에서 user는 게시판에 글쓴 사람이고, user.address는 그 게시자들의 주소를 말합니다.\n          board: 2 //빌려주세요 게시판 코드\n\n        }\n      });\n    } else {\n      //로그인이 되어있지 않은 상태\n      return axios.get(\"https://reqres.in/api/login\", {\n        //테스트용 url 입니다. 바꿔주세요.\n        params: {\n          board: 2 //빌려주세요 게시판 코드\n\n        }\n      });\n    }\n  }; //로그인 상태를 확인하기 위한 통신입니다.\n\n\n  useEffect(() => {\n    //처음 페이지가 실행될 때, 로그인 상태바뀔때, 사용자 주소 바뀔때 실행됨\n    axios.get(\"https://reqres.in/api/login\") //로그인 상태를 확인하기 위한 통신 url 입력해주세요\n    .then(response => {\n      //로그인한 상태일때\n      setIsLogined(true);\n      return (//사용자 주소 가져오기\n        axios.get(\"https://reqres.in/api/users?page=2\") //현재 로그인한 사용자 정보 url 입력해주세요\n        .then(data => {\n          setShowAddress(showAddress); //지금 로그인한 사용자 주소를 가져옵니다.\n        }).catch(e => console.log(e))\n      );\n    }) //로그인한 안한 상태일때\n    .catch(e => {\n      console.log(e);\n      setIsLogined(false);\n    });\n  }, [isLogined, showAddress]); //각 게시판의 글을 가져올때 사용하는 통신입니다.\n\n  useEffect(() => {\n    //처음 페이지가 실행될 때, 로그인 상태바뀔때, 사용자 주소 바뀔때 실행됨\n    if (!isLogined) {\n      //로그인 하지 않은 상황에서는 아무글도 안보임 \n      axios.all([getLendYou(false), getBorrowMe(false)]) // axios.all로 여러 개의 request를 보내고\n      .then(axios.spread(({\n        lendScrapResp\n      }, {\n        borrowScrapResp\n      }) => {\n        // response를 spread로 받는다. \n        //lendScrapResp: 빌려줄게요 게시판 찜목록 / borrowScrapResp: 빌려주세요 게시판 찜목록\n        setLendYouList(lendScrapResp.data.data);\n        console.log(lendScrapResp);\n        setBorrowMeList(borrowScrapResp.data.data);\n        console.log(borrowScrapResp);\n      })).catch(error => {\n        console.error(error);\n      });\n    } else if (isLogined) {\n      //로그인 한 상황에서는 사용자가 찜한 목록 \n      axios.all([getLendYou(true), getBorrowMe(true)]) // axios.all로 여러 개의 request를 보내고\n      .then(axios.spread(({\n        lendScrapResp\n      }, {\n        borrowScrapResp\n      }) => {\n        // response를 spread로 받는다. \n        //lendScrapResp: 빌려줄게요 게시판 찜목록 / borrowScrapResp: 빌려주세요 게시판 찜목록\n        setLendYouList(lendScrapResp.data.data);\n        console.log(lendScrapResp);\n        setBorrowMeList(borrowScrapResp.data.data);\n        console.log(borrowScrapResp);\n      })).catch(error => {\n        console.error(error);\n      });\n    }\n  }, [isLogined, showAddress]); //아래 코드는 주석 풀지 않으셔도 됩니다.\n  // 현재주소 받기 \n  // useEffect(() => { //처음 페이지가 실행될 때만 실행된다\n  //     axios.get(\"url\") //통신하기 위한 url 을 입력해주세요\n  //     .then((data) => {\n  //         setShowAddress(data.showAddress);\n  //     })\n  //     .catch( e => console.log(e));\n  //  }, []);\n\n  const searchChange = e => {\n    //검색창에 text 입력했을 때 입력한 text를 검색 text에 넣어줌\n    setSearchText(e.target.value);\n  };\n\n  const btnClick = () => {\n    //검색창 버튼 클릭했을 때 뜨는 버튼\n    //filtered: 검색 결과 게시물들이 담기는 배열\n    if (lendBtn) {\n      const filtered = lendYouList.filter(post => post.email.toLowerCase().indexOf(searchText.toLowerCase()) > -1);\n      setFilteredPost(filtered);\n      console.log(filtered);\n    } else {\n      const filtered = borrowMeList.filter(post => post.email.toLowerCase().indexOf(searchText.toLowerCase()) > -1);\n      setFilteredPost(filtered);\n      console.log(filtered);\n    }\n\n    setSearchText('');\n    setSearch(true);\n  };\n\n  const onKeyPress = e => {\n    if (e.key === 'Enter') {\n      btnClick();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageStyled, {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: '16px',\n          color: '#A352CC',\n          fontWeight: 'bolder',\n          textAlign: 'center',\n          marginTop: '-5px'\n        },\n        children: \"\\uC2A4\\uD06C\\uB7A9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuStyled, {\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          onClick: onClickMenu1,\n          style: fontStyle1,\n          children: \"\\uBE4C\\uB824\\uC904\\uAC8C\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          onClick: onClickMenu2,\n          style: fontStyle2,\n          children: \"\\uBE4C\\uB824\\uC8FC\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: [!search && lendBtn && lendYouList.map(data => {\n        //빌려줄게요 게시판(default)\n        return /*#__PURE__*/_jsxDEV(Link, {\n          to: `/ShowPost/${data.no}`,\n          children: /*#__PURE__*/_jsxDEV(PostComponent2, {\n            image: data.image,\n            title: data.title,\n            postDate: data.postDate,\n            writerAddress: data.user.showAddress,\n            startDate: data.startDate,\n            endDate: data.endDate,\n            cost: data.cost\n          }, data.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 26\n        }, this); //아래는 테스트용 더미 데이터입니다. 필요없다면 지워주세요.\n        // return (<PostComponent2\n        //     image={data.avatar}\n        //     title={data.first_name}\n        //     postDate=\"2021/08/19\"\n        //     writerAddress=\"등촌3동\" \n        //     startDate=\"8/12\"\n        //     endDate=\"8/30\"\n        //     cost=\"20,000\"\n        //     key={data.id}\n        //     />\n        // );\n      }), search && lendBtn && filteredPost.map(data => {\n        //빌려줄게요 게시판에서 검색한 경우 나오는 post\n        return /*#__PURE__*/_jsxDEV(Link, {\n          to: `/ShowPost/${data.no}`,\n          children: /*#__PURE__*/_jsxDEV(PostComponent2, {\n            image: data.image,\n            title: data.title,\n            postDate: data.postDate,\n            writerAddress: data.user.showAddress,\n            startDate: data.startDate,\n            endDate: data.endDate,\n            cost: data.cost\n          }, data.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 31\n        }, this); //아래는 테스트용 더미 데이터입니다. 필요없다면 지워주세요.\n        // return (<PostComponent2\n        //     image={data.avatar}\n        //     title={data.first_name}\n        //     postDate=\"2021/08/19\"\n        //     writerAddress=\"강서구 등촌3동\" \n        //     startDate=\"8/12\"\n        //     endDate=\"8/30\"\n        //     cost=\"20,000\"\n        //     key={data.id}\n        //     />\n        // );\n      }), !search && borrowBtn && borrowMeList.map(data => {\n        //빌려주세요 게시판(default)\n        return /*#__PURE__*/_jsxDEV(Link, {\n          to: `/ShowPost/${data.no}`,\n          children: /*#__PURE__*/_jsxDEV(PostComponent, {\n            title: data.title,\n            postDate: data.postDate,\n            writerAddress: data.user.showAddress,\n            startDate: data.startDate,\n            endDate: data.endDate,\n            cost: data.cost\n          }, data.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 22\n        }, this); //아래는 테스트용 더미 데이터입니다. 필요없다면 지워주세요.\n        // return (<PostComponent\n        //     title={data.email}\n        //     postDate=\"2021/08/19\"\n        //     writerAddress=\"미추홀구 용현동\" \n        //     startDate=\"8/12\"\n        //     endDate=\"8/30\"\n        //     cost=\"20,000\"\n        //     key={data.id}\n        //     />\n        // );\n      }), search && borrowBtn && filteredPost.map(data => {\n        //빌려주세요 게시판에서 검색한 경우 나오는 post\n        return /*#__PURE__*/_jsxDEV(Link, {\n          to: `/ShowPost/${data.no}`,\n          children: /*#__PURE__*/_jsxDEV(PostComponent, {\n            title: data.title,\n            postDate: data.postDate,\n            writerAddress: data.user.showAddress,\n            startDate: data.startDate,\n            endDate: data.endDate,\n            cost: data.cost\n          }, data.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 21\n        }, this); //아래는 테스트용 더미 데이터입니다. 필요없다면 지워주세요.\n        // return (<PostComponent\n        //     title={data.email}\n        //     postDate=\"2021/08/19\"\n        //     writerAddress=\"미추홀구 용현동\" \n        //     startDate=\"8/12\"\n        //     endDate=\"8/30\"\n        //     cost=\"20,000\"\n        //     key={data.id}\n        //     />\n        // );\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Scrap, \"D/lIaDt+2yrOLvuTeO+zdJblrfM=\");\n\n_c4 = Scrap;\nexport default Scrap;\nexport { StyledButton };\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"List\");\n$RefreshReg$(_c2, \"MenuStyled\");\n$RefreshReg$(_c3, \"PageStyled\");\n$RefreshReg$(_c4, \"Scrap\");","map":{"version":3,"sources":["C:/Users/sycho/Desktop/billage/Front-End/src/components/Scrap.jsx"],"names":["React","useState","useEffect","BoardNav","styled","axios","PostComponent","PostComponent2","Link","findAllByTestId","SearchBox","div","Input","input","Img","img","StyledButton","button","List","MenuStyled","PageStyled","Scrap","showAddress","setShowAddress","searchText","setSearchText","lendYouList","setLendYouList","borrowMeList","setBorrowMeList","fontStyle1","setFontStyle1","color","fontWeight","fontStyle2","setFontStyle2","lendBtn","setLendBtn","borrowBtn","setBorrowBtn","search","setSearch","filteredPost","setFilteredPost","onClickMenu1","e","preventDefault","onClickMenu2","isLogined","setIsLogined","getLendYou","loginChk","get","params","board","getBorrowMe","then","response","data","catch","console","log","all","spread","lendScrapResp","borrowScrapResp","error","searchChange","target","value","btnClick","filtered","filter","post","email","toLowerCase","indexOf","onKeyPress","key","fontSize","textAlign","marginTop","map","no","image","title","postDate","user","startDate","endDate","cost","id"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport BoardNav from './BoardNav';\r\nimport styled from \"styled-components\";\r\nimport axios from 'axios';\r\nimport PostComponent from './PostComponent';\r\nimport PostComponent2 from './PostComponent2';\r\nimport { Link } from 'react-router-dom';\r\nimport { findAllByTestId } from '@testing-library/react';\r\n\r\n//검색박스 전체 (회색 둥글둥글 모양) 스타일링입니다.\r\nconst SearchBox=styled.div`\r\n\r\n    position:relative;\r\n    background-color:#E5E5E5;\r\n    border-radius:20px;\r\n    margin:-15px 15px 10px 15px;\r\n    padding:5px 5px 5px 20px;\r\n    height:25px;\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:flex-end;\r\n\r\n    `;\r\n//위의 검색박스 내의 input 창 스타일링입니다.\r\nconst Input=styled.input`\r\n    width:95%;\r\n    outline:none;\r\n    border:none;\r\n    border-radius:20px;\r\n    height:25px;\r\n    background:none;\r\n`;\r\n\r\n//이미지 태그 (각 버튼들에 들어가는 아이콘) 대신 쓰는 component입니다.\r\nexport const Img=styled.img`\r\nmax-width: 100%;\r\nheight:auto;\r\n`;\r\n//각 버튼들 (글 등록, )\r\nconst StyledButton=styled.button`\r\n    border:none;\r\n    margin:2px;\r\n    background:none;\r\n    height:30px;\r\n    width:30px;\r\n    padding-top:5px;\r\n    background:none;\r\n    color:#7D7D7D;\r\n    font-weight:bold;\r\n`;\r\n//게시글 리스트 component 입니다.\r\nconst List=styled.div`\r\nfont-family:'KoddiUDOnGothic-Regular';\r\n`;\r\n\r\n//메뉴 스타일\r\nconst MenuStyled=styled.div`\r\n    display:flex;\r\n    justify-content:space-evenly;\r\n    \r\n`;\r\n\r\n//스크롤 할때 상단 고정\r\nconst PageStyled=styled.div`\r\n    position: sticky;\r\n    top: 0px;\r\n    z-index: 1;\r\n    background-color: white;\r\n`;\r\n\r\nconst Scrap=()=>{\r\n    const [showAddress, setShowAddress]=useState(''); //현재 사용자의 주소\r\n    const [searchText,setSearchText]=useState(''); //검색 input 창에 입력되는 text\r\n    const [lendYouList,setLendYouList]=useState([]); //빌려줄게요 리스트. 백엔드에서 가져온 데이터 담는 배열\r\n    const [borrowMeList,setBorrowMeList]=useState([]); //빌려주세요 리스트\r\n\r\n    const [fontStyle1, setFontStyle1]=useState({color: \"black\", fontWeight:\"bold\"});\r\n    const [fontStyle2, setFontStyle2]=useState({color: \"gray\"});\r\n    const [lendBtn,setLendBtn]=useState(true); //현재 빌려줄게요 게시판인지 확인\r\n    const [borrowBtn,setBorrowBtn]=useState(false); //현재 빌려주세요 게시판인지 확인\r\n    const [search,setSearch]=useState(false); // 검색 버튼이 눌렸는지 확인하는 변수\r\n\r\n    const [filteredPost,setFilteredPost]=useState([]); //검색한 post 를 담는 배열\r\n    const onClickMenu1 = (e) => {e.preventDefault(); setFontStyle1({color: \"black\", fontWeight:\"bold\"}); setFontStyle2({color: \"gray\"}); \r\n    setLendBtn(true); setBorrowBtn(false); setSearch(false); };\r\n    const onClickMenu2 = (e) => {e.preventDefault(); setFontStyle1({color: \"gray\"}); setFontStyle2({color: \"black\",  fontWeight:\"bold\"});\r\n    setBorrowBtn(true);  setLendBtn(false); setSearch(false); };\r\n    const [isLogined,setIsLogined]=useState(false);\r\n    \r\n    // 빌려줄게요 게시판 찜목록입니다.\r\n    const getLendYou=async (loginChk) => {\r\n        if(loginChk){ //로그인이 되어있는 상태에서는 사용자가 찜한 목록\r\n        return axios.get(\"https://reqres.in/api/users?page=2\", {//테스트용 url 입니다. 바꿔주세요.\r\n                    params: {\r\n                    //user 정보가 없어서 오류 나서 주석처리해놓았습니다. 아래주석 풀어주세요.\r\n                    // user.showAddress:showAddress, //사용자와 같은 동 내에서 쓴 글만 보여줌\r\n                    board:1, ////빌려줄게요 게시판 코드\r\n                    }\r\n                });\r\n            }\r\n        else{//로그인이 되어있지 않은 상태\r\n                return axios.get(\"https://reqres.in/api/login\", {//테스트용 url 입니다. 바꿔주세요.\r\n                            params: {\r\n                            board:1, //빌려줄게요 게시판 코드\r\n                            }\r\n                        });\r\n        }\r\n    };\r\n     // 빌려주세요 게시판 찜목록입니다.\r\n    const getBorrowMe=async (loginChk) => {\r\n        if(loginChk){ //로그인이 되어있는 상태에서는 사용자가 찜한 목록 \r\n        return axios.get(\"https://reqres.in/api/users?page=2\", {//테스트용 url 입니다. 바꿔주세요.\r\n        params: {\r\n        //user 정보가 없어서 오류 나서 주석처리해놓았습니다. 아래주석 풀어주세요.\r\n        // user.showAddress:showAddress, //사용자와 같은 동 내에서 쓴 글만 보여줌\r\n        //여기에서 user는 게시판에 글쓴 사람이고, user.address는 그 게시자들의 주소를 말합니다.\r\n        board:2, //빌려주세요 게시판 코드\r\n        }\r\n    });\r\n    }\r\n    else{ //로그인이 되어있지 않은 상태\r\n        return axios.get(\"https://reqres.in/api/login\", {//테스트용 url 입니다. 바꿔주세요.\r\n        params: {\r\n        board:2, //빌려주세요 게시판 코드\r\n        }\r\n    });       \r\n    }\r\n    };\r\n     //로그인 상태를 확인하기 위한 통신입니다.\r\n    useEffect(() => { //처음 페이지가 실행될 때, 로그인 상태바뀔때, 사용자 주소 바뀔때 실행됨\r\n        axios.get(\"https://reqres.in/api/login\") //로그인 상태를 확인하기 위한 통신 url 입력해주세요\r\n        .then((response) => { //로그인한 상태일때\r\n            setIsLogined(true); \r\n            return(\r\n                //사용자 주소 가져오기\r\n                axios.get(\"https://reqres.in/api/users?page=2\") //현재 로그인한 사용자 정보 url 입력해주세요\r\n                    .then((data) => {\r\n                        setShowAddress(showAddress); //지금 로그인한 사용자 주소를 가져옵니다.\r\n                    })\r\n                    .catch( e => console.log(e))\r\n            );\r\n        })//로그인한 안한 상태일때\r\n        .catch( e => {\r\n            console.log(e);\r\n            setIsLogined(false);\r\n        });\r\n     }, [isLogined, showAddress]); \r\n\r\n     //각 게시판의 글을 가져올때 사용하는 통신입니다.\r\n    useEffect(() => {  //처음 페이지가 실행될 때, 로그인 상태바뀔때, 사용자 주소 바뀔때 실행됨\r\n    if(!isLogined){ //로그인 하지 않은 상황에서는 아무글도 안보임 \r\n    axios.all([getLendYou(false),getBorrowMe(false)]) // axios.all로 여러 개의 request를 보내고\r\n    .then(axios.spread(({lendScrapResp}, {borrowScrapResp}) => { // response를 spread로 받는다. \r\n        //lendScrapResp: 빌려줄게요 게시판 찜목록 / borrowScrapResp: 빌려주세요 게시판 찜목록\r\n        setLendYouList(lendScrapResp.data.data);\r\n        console.log(lendScrapResp);\r\n        setBorrowMeList(borrowScrapResp.data.data);\r\n        console.log(borrowScrapResp)\r\n    })).catch((error) => {\r\n        console.error(error)\r\n    })}\r\n    else if(isLogined){//로그인 한 상황에서는 사용자가 찜한 목록 \r\n        axios.all([getLendYou(true),getBorrowMe(true)]) // axios.all로 여러 개의 request를 보내고\r\n        .then(axios.spread(({lendScrapResp}, {borrowScrapResp}) => { // response를 spread로 받는다. \r\n            //lendScrapResp: 빌려줄게요 게시판 찜목록 / borrowScrapResp: 빌려주세요 게시판 찜목록\r\n            setLendYouList(lendScrapResp.data.data);\r\n            console.log(lendScrapResp);\r\n            setBorrowMeList(borrowScrapResp.data.data);\r\n            console.log(borrowScrapResp)\r\n        })).catch((error) => {\r\n            console.error(error)\r\n        })\r\n    }\r\n    }, [isLogined, showAddress]);\r\n        \r\n    //아래 코드는 주석 풀지 않으셔도 됩니다.\r\n    // 현재주소 받기 \r\n    // useEffect(() => { //처음 페이지가 실행될 때만 실행된다\r\n    //     axios.get(\"url\") //통신하기 위한 url 을 입력해주세요\r\n    //     .then((data) => {\r\n    //         setShowAddress(data.showAddress);\r\n    //     })\r\n    //     .catch( e => console.log(e));\r\n    //  }, []);\r\n\r\n    const searchChange=(e)=>{//검색창에 text 입력했을 때 입력한 text를 검색 text에 넣어줌\r\n        setSearchText(e.target.value);\r\n    };\r\n    const btnClick=()=>{ //검색창 버튼 클릭했을 때 뜨는 버튼\r\n        //filtered: 검색 결과 게시물들이 담기는 배열\r\n    if(lendBtn){\r\n    const filtered = lendYouList.filter((post) =>\r\n        post.email.toLowerCase().indexOf(searchText.toLowerCase()) > -1\r\n    );\r\n    setFilteredPost(filtered);\r\n    console.log(filtered);\r\n    }\r\n    else{\r\n    const filtered = borrowMeList.filter((post) =>\r\n    post.email.toLowerCase().indexOf(searchText.toLowerCase()) > -1\r\n    );\r\n    setFilteredPost(filtered);\r\n    console.log(filtered);\r\n    }\r\n    setSearchText('');\r\n    setSearch(true);\r\n\r\n    };\r\n    const onKeyPress=(e)=>{\r\n        if(e.key ==='Enter'){\r\n            btnClick();\r\n        }\r\n    };\r\n    return(\r\n    <>\r\n   {/* <BoardNav showAddress={showAddress} login={isLogined} boardName=\"게시판\" />     */}\r\n    <PageStyled>\r\n        <br/>\r\n{/* \r\n        <SearchBox>\r\n        <Input value={searchText} onChange={searchChange} onKeyPress={onKeyPress}/>\r\n        {searchText&&<StyledButton onClick={btnClick} color=\"#E5E5E5\"><Img src=\"img/search.png\" alt=\"검색\"/></StyledButton>}\r\n        </SearchBox> */}\r\n        <p style={{fontSize:'16px', color:'#A352CC' ,fontWeight:'bolder', textAlign:'center', marginTop:'-5px'}}>스크랩</p>\r\n        <br/>\r\n        \r\n        <MenuStyled>\r\n        <a href=\"/\" onClick={onClickMenu1} style={fontStyle1}>빌려줄게요</a>\r\n        <a href=\"/\" onClick={onClickMenu2} style={fontStyle2}>빌려주세요</a>\r\n        </MenuStyled>\r\n        <hr></hr>\r\n    </PageStyled>\r\n    <List>\r\n    {(!search&&lendBtn)&&lendYouList.map((data) => { //빌려줄게요 게시판(default)\r\n                return ( <Link to={`/ShowPost/${data.no}`}>\r\n                    <PostComponent2\r\n                        image={data.image}\r\n                        title={data.title}\r\n                        postDate={data.postDate} \r\n                        writerAddress={data.user.showAddress} \r\n                        startDate={data.startDate}\r\n                        endDate={data.endDate}\r\n                        cost={data.cost}\r\n                        key={data.id}\r\n                        />\r\n                        </Link>\r\n                    );\r\n                    \r\n                //아래는 테스트용 더미 데이터입니다. 필요없다면 지워주세요.\r\n                // return (<PostComponent2\r\n                //     image={data.avatar}\r\n                //     title={data.first_name}\r\n                //     postDate=\"2021/08/19\"\r\n                //     writerAddress=\"등촌3동\" \r\n                //     startDate=\"8/12\"\r\n                //     endDate=\"8/30\"\r\n                //     cost=\"20,000\"\r\n                //     key={data.id}\r\n                //     />\r\n                // );\r\n                })}\r\n    {(search&&lendBtn)&&filteredPost.map((data)=>{ //빌려줄게요 게시판에서 검색한 경우 나오는 post\r\n                      return (<Link to={`/ShowPost/${data.no}`}>\r\n                        <PostComponent2\r\n                        image={data.image}\r\n                        title={data.title}\r\n                        postDate={data.postDate} \r\n                        writerAddress={data.user.showAddress}  \r\n                        startDate={data.startDate}\r\n                        endDate={data.endDate}\r\n                        cost={data.cost}\r\n                        key={data.id}\r\n                        /></Link>\r\n                    );\r\n                    //아래는 테스트용 더미 데이터입니다. 필요없다면 지워주세요.\r\n                    // return (<PostComponent2\r\n                    //     image={data.avatar}\r\n                    //     title={data.first_name}\r\n                    //     postDate=\"2021/08/19\"\r\n                    //     writerAddress=\"강서구 등촌3동\" \r\n                    //     startDate=\"8/12\"\r\n                    //     endDate=\"8/30\"\r\n                    //     cost=\"20,000\"\r\n                    //     key={data.id}\r\n                    //     />\r\n                    // );\r\n    })}\r\n    {(!search&&borrowBtn)&&borrowMeList.map((data)=> { //빌려주세요 게시판(default)\r\n            return ( <Link to={`/ShowPost/${data.no}`}>\r\n                        <PostComponent\r\n                        title={data.title}\r\n                        postDate={data.postDate} \r\n                        writerAddress={data.user.showAddress} \r\n                        startDate={data.startDate}\r\n                        endDate={data.endDate}\r\n                        cost={data.cost}\r\n                        key={data.id}\r\n                        />\r\n                    </Link>   \r\n                    );\r\n            //아래는 테스트용 더미 데이터입니다. 필요없다면 지워주세요.\r\n            // return (<PostComponent\r\n            //     title={data.email}\r\n            //     postDate=\"2021/08/19\"\r\n            //     writerAddress=\"미추홀구 용현동\" \r\n            //     startDate=\"8/12\"\r\n            //     endDate=\"8/30\"\r\n            //     cost=\"20,000\"\r\n            //     key={data.id}\r\n            //     />\r\n            // );\r\n            \r\n    })}\r\n     {(search&&borrowBtn)&&filteredPost.map((data)=>{ //빌려주세요 게시판에서 검색한 경우 나오는 post\r\n            return (<Link to={`/ShowPost/${data.no}`}>\r\n                <PostComponent\r\n                title={data.title}\r\n                postDate={data.postDate} \r\n                writerAddress={data.user.showAddress} \r\n                startDate={data.startDate}\r\n                endDate={data.endDate}\r\n                cost={data.cost}\r\n                key={data.id}\r\n                />\r\n                </Link>\r\n            );\r\n            //아래는 테스트용 더미 데이터입니다. 필요없다면 지워주세요.\r\n            // return (<PostComponent\r\n            //     title={data.email}\r\n            //     postDate=\"2021/08/19\"\r\n            //     writerAddress=\"미추홀구 용현동\" \r\n            //     startDate=\"8/12\"\r\n            //     endDate=\"8/30\"\r\n            //     cost=\"20,000\"\r\n            //     key={data.id}\r\n            //     />\r\n            // );\r\n    })}\r\n    </List>\r\n    </>\r\n    );\r\n};\r\n\r\nexport default Scrap;\r\nexport {StyledButton};"]},"metadata":{},"sourceType":"module"}