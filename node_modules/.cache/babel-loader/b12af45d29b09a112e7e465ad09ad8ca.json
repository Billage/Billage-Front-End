{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sycho\\\\Desktop\\\\Front-End-master\\\\src\\\\components\\\\BorrowBoard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport BoardNav from './BoardNav';\nimport styled from \"styled-components\";\nimport axios from 'axios';\nimport PostComponent from './PostComponent';\nimport PostComponent2 from './PostComponent2';\nimport { Link } from 'react-router-dom'; //검색박스 전체 (회색 둥글둥글 모양) 스타일링입니다.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBox = styled.div`\n    position:relative;\n    background-color:#E5E5E5;\n    border-radius:20px;\n    margin:-15px 15px 10px 15px;\n    padding:5px 5px 5px 20px;\n    height:25px;\n    display:flex;\n    align-items:center;\n    justify-content:flex-end;\n    `; //위의 검색박스 내의 input 창 스타일링입니다.\n\n_c = SearchBox;\nconst Input = styled.input`\n    width:95%;\n    outline:none;\n    border:none;\n    border-radius:20px;\n    height:25px;\n    background:none;\n`; //이미지 태그 (각 버튼들에 들어가는 아이콘) 대신 쓰는 component입니다.\n\n_c2 = Input;\nexport const Img = styled.img`\n    max-width: 100%;\n    height:auto;\n`; //각 버튼들 (글 등록, )\n\n_c3 = Img;\nconst StyledButton = styled.button`\n    border:none;\n    margin:2px;\n    background:none;\n    height:30px;\n    width:30px;\n    padding-top:5px;\n    background:none;\n    color:#7D7D7D;\n    font-weight:bold;\n`; //게시글 리스트 component입니다.\n\n_c4 = StyledButton;\nconst List = styled.div`\n    font-family:'KoddiUDOnGothic-Regular';\n`; //메뉴 스타일\n\n_c5 = List;\nconst MenuStyled = styled.div`\n    display:flex;\n    justify-content:space-evenly;\n    \n`; //스크롤 할때 상단 고정\n\n_c6 = MenuStyled;\nconst PageStyled = styled.div`\n    position: sticky;\n    top: 0px;\n    z-index: 1;\n    background-color: white;\n`; // 변경 ---------------------------------------------------\n// 로그인 상태를 서버에서 구분 후, 그에 맞는 게시글을 클라이언트로 전송\n\n_c7 = PageStyled;\n\nconst BorrowBoard = () => {\n  _s();\n\n  const [login, setLogin] = useState(''); // 현재 로그인 상태\n\n  const [showAddress, setShowAddress] = useState(''); //현재 사용자의 주소\n\n  const [searchText, setSearchText] = useState(''); //검색 input 창에 입력되는 text\n\n  const [lendYouList, setLendYouList] = useState([]); //빌려줄게요 리스트. 백엔드에서 가져온 데이터 담는 배열\n\n  const [borrowMeList, setBorrowMeList] = useState([]); //빌려주세요 리스트\n\n  const [fontStyle1, setFontStyle1] = useState({\n    color: \"black\",\n    fontWeight: \"bold\"\n  });\n  const [fontStyle2, setFontStyle2] = useState({\n    color: \"gray\"\n  });\n  const [lendBtn, setLendBtn] = useState(true); //현재 빌려줄게요 게시판인지 확인\n\n  const [borrowBtn, setBorrowBtn] = useState(false); //현재 빌려주세요 게시판인지 확인\n\n  const [search, setSearch] = useState(false); //검색 버튼이 눌렸는지 확인하는 변수\n\n  const [filteredPost, setFilteredPost] = useState([]); //검색한 post 를 담는 배열\n\n  const onClickMenu1 = e => {\n    e.preventDefault();\n    setFontStyle1({\n      color: \"black\",\n      fontWeight: \"bold\"\n    });\n    setFontStyle2({\n      color: \"gray\"\n    });\n    setLendBtn(true);\n    setBorrowBtn(false);\n    setSearch(false);\n  };\n\n  const onClickMenu2 = e => {\n    e.preventDefault();\n    setFontStyle1({\n      color: \"gray\"\n    });\n    setFontStyle2({\n      color: \"black\",\n      fontWeight: \"bold\"\n    });\n    setBorrowBtn(true);\n    setLendBtn(false);\n    setSearch(false);\n  }; // 유저 정보 가져오기\n\n\n  const getUser = () => {\n    return axios.get(\"http://localhost:7000/auth\", {\n      withCredentials: true\n    });\n  }; // 빌려줄게요 게시글 가져오기\n\n\n  const getLendYou = () => {\n    return axios.get(\"http://localhost:7000/post/lend\", {\n      withCredentials: true\n    });\n  }; // 빌려주세요 게시글 가져오기\n\n\n  const getBorrowMe = () => {\n    return axios.get(\"http://localhost:7000/post/borrow\", {\n      withCredentials: true\n    });\n  }; //각 게시판의 글을 가져올때 사용하는 통신입니다.\n\n\n  useEffect(() => {\n    //처음 페이지가 실행될 때, 로그인 상태바뀔때, 사용자 주소 바뀔때 실행됨\n    axios.all([getLendYou(), getBorrowMe(), getUser()]) // axios.all로 여러 개의 request를 보내고\n    .then(axios.spread((lendResp, borrowResp, user) => {\n      // response를 spread로 받는다. \n      setLendYouList(lendResp.data);\n      setBorrowMeList(borrowResp.data);\n\n      if (user.data) {\n        setShowAddress(user.data.address);\n        setLogin(true);\n      } else {\n        setLogin(false);\n      }\n    })).catch(error => {\n      console.error(error);\n    });\n  }, []); // ---------------------------------------------------\n\n  const searchChange = e => {\n    //검색창에 text 입력했을 때 입력한 text를 검색 text에 넣어줌\n    setSearchText(e.target.value);\n  };\n\n  const btnClick = () => {\n    //검색창 버튼 클릭했을 때 뜨는 버튼\n    //filtered: 검색 결과 게시물들이 담기는 배열\n    if (lendBtn) {\n      const filtered = lendYouList.filter(post => post.email.toLowerCase().indexOf(searchText.toLowerCase()) > -1);\n      setFilteredPost(filtered);\n      console.log(filtered);\n    } else {\n      const filtered = borrowMeList.filter(post => post.email.toLowerCase().indexOf(searchText.toLowerCase()) > -1);\n      setFilteredPost(filtered);\n      console.log(filtered);\n    }\n\n    setSearchText('');\n    setSearch(true);\n  };\n\n  const onKeyPress = e => {\n    if (e.key === 'Enter') {\n      btnClick();\n    }\n  };\n\n  const numberWithCommas = x => {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(BoardNav, {\n      showAddress: showAddress,\n      login: login,\n      boardName: \"\\uAC8C\\uC2DC\\uD310\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      className: \"site-layout-background\",\n      style: {\n        padding: 0,\n        background: '#ffffff',\n        fontSize: '30px'\n      },\n      children: /*#__PURE__*/React.createElement(collapsed ? LeftCircleTwoTone : RightCircleTwoTone, {\n        className: 'trigger',\n        onClick: toggle\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(PageStyled, {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          value: searchText,\n          onChange: searchChange,\n          onKeyPress: onKeyPress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 9\n        }, this), searchText && /*#__PURE__*/_jsxDEV(StyledButton, {\n          onClick: btnClick,\n          color: \"#E5E5E5\",\n          children: /*#__PURE__*/_jsxDEV(Img, {\n            src: \"img/search.png\",\n            alt: \"\\uAC80\\uC0C9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 71\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuStyled, {\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          onClick: onClickMenu1,\n          style: fontStyle1,\n          children: \"\\uBE4C\\uB824\\uC904\\uAC8C\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          onClick: onClickMenu2,\n          style: fontStyle2,\n          children: \"\\uBE4C\\uB824\\uC8FC\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: [!search && lendBtn && lendYouList.map(data => {\n        //빌려줄게요 게시판 \n        return /*#__PURE__*/_jsxDEV(Link, {\n          to: `post/${data.id}`,\n          children: /*#__PURE__*/_jsxDEV(PostComponent2, {\n            image: data.img,\n            title: data.title,\n            postDate: data.date,\n            writerAddress: data.address,\n            startDate: data.start_date,\n            endDate: data.end_date,\n            cost: numberWithCommas(Number(data.price))\n          }, data.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 17\n        }, this);\n      }), search && lendBtn && filteredPost.map(data => {\n        //빌려줄게요 게시판에서 검색\n        return /*#__PURE__*/_jsxDEV(Link, {\n          to: `post/${data.id}`,\n          children: /*#__PURE__*/_jsxDEV(PostComponent2, {\n            image: data.img,\n            title: data.title,\n            postDate: data.date,\n            writerAddress: data.address,\n            startDate: data.start_date,\n            endDate: data.end_date,\n            cost: numberWithCommas(Number(data.price))\n          }, data.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 17\n        }, this);\n      }), !search && borrowBtn && borrowMeList.map(data => {\n        //빌려주세요 게시판\n        return /*#__PURE__*/_jsxDEV(Link, {\n          to: `post/${data.id}`,\n          children: /*#__PURE__*/_jsxDEV(PostComponent, {\n            title: data.title,\n            postDate: data.date,\n            writerAddress: data.address,\n            startDate: data.start_date,\n            endDate: data.end_date,\n            cost: numberWithCommas(Number(data.price))\n          }, data.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 17\n        }, this);\n      }), search && borrowBtn && filteredPost.map(data => {\n        //빌려주세요 게시판에서 검색\n        return /*#__PURE__*/_jsxDEV(Link, {\n          to: `post/${data.id}`,\n          children: /*#__PURE__*/_jsxDEV(PostComponent, {\n            title: data.title,\n            postDate: data.date,\n            writerAddress: data.address,\n            startDate: data.start_date,\n            endDate: data.end_date,\n            cost: numberWithCommas(Number(data.price))\n          }, data.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 17\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BorrowBoard, \"XG8dtqiUrS48/39ZMh3dsGXv4XE=\");\n\n_c8 = BorrowBoard;\nexport default BorrowBoard;\nexport { StyledButton };\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"SearchBox\");\n$RefreshReg$(_c2, \"Input\");\n$RefreshReg$(_c3, \"Img\");\n$RefreshReg$(_c4, \"StyledButton\");\n$RefreshReg$(_c5, \"List\");\n$RefreshReg$(_c6, \"MenuStyled\");\n$RefreshReg$(_c7, \"PageStyled\");\n$RefreshReg$(_c8, \"BorrowBoard\");","map":{"version":3,"sources":["C:/Users/sycho/Desktop/Front-End-master/src/components/BorrowBoard.jsx"],"names":["React","useState","useEffect","BoardNav","styled","axios","PostComponent","PostComponent2","Link","SearchBox","div","Input","input","Img","img","StyledButton","button","List","MenuStyled","PageStyled","BorrowBoard","login","setLogin","showAddress","setShowAddress","searchText","setSearchText","lendYouList","setLendYouList","borrowMeList","setBorrowMeList","fontStyle1","setFontStyle1","color","fontWeight","fontStyle2","setFontStyle2","lendBtn","setLendBtn","borrowBtn","setBorrowBtn","search","setSearch","filteredPost","setFilteredPost","onClickMenu1","e","preventDefault","onClickMenu2","getUser","get","withCredentials","getLendYou","getBorrowMe","all","then","spread","lendResp","borrowResp","user","data","address","catch","error","console","searchChange","target","value","btnClick","filtered","filter","post","email","toLowerCase","indexOf","log","onKeyPress","key","numberWithCommas","x","toString","replace","padding","background","fontSize","createElement","collapsed","LeftCircleTwoTone","RightCircleTwoTone","className","onClick","toggle","map","id","title","date","start_date","end_date","Number","price"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport BoardNav from './BoardNav';\nimport styled from \"styled-components\";\nimport axios from 'axios';\nimport PostComponent from './PostComponent';\nimport PostComponent2 from './PostComponent2';\nimport { Link } from 'react-router-dom';\n\n//검색박스 전체 (회색 둥글둥글 모양) 스타일링입니다.\nconst SearchBox=styled.div`\n    position:relative;\n    background-color:#E5E5E5;\n    border-radius:20px;\n    margin:-15px 15px 10px 15px;\n    padding:5px 5px 5px 20px;\n    height:25px;\n    display:flex;\n    align-items:center;\n    justify-content:flex-end;\n    `;\n//위의 검색박스 내의 input 창 스타일링입니다.\nconst Input=styled.input`\n    width:95%;\n    outline:none;\n    border:none;\n    border-radius:20px;\n    height:25px;\n    background:none;\n`;\n//이미지 태그 (각 버튼들에 들어가는 아이콘) 대신 쓰는 component입니다.\nexport const Img=styled.img`\n    max-width: 100%;\n    height:auto;\n`;\n//각 버튼들 (글 등록, )\nconst StyledButton=styled.button`\n    border:none;\n    margin:2px;\n    background:none;\n    height:30px;\n    width:30px;\n    padding-top:5px;\n    background:none;\n    color:#7D7D7D;\n    font-weight:bold;\n`;\n//게시글 리스트 component입니다.\nconst List=styled.div`\n    font-family:'KoddiUDOnGothic-Regular';\n`;\n//메뉴 스타일\nconst MenuStyled=styled.div`\n    display:flex;\n    justify-content:space-evenly;\n    \n`;\n//스크롤 할때 상단 고정\nconst PageStyled=styled.div`\n    position: sticky;\n    top: 0px;\n    z-index: 1;\n    background-color: white;\n`;\n// 변경 ---------------------------------------------------\n// 로그인 상태를 서버에서 구분 후, 그에 맞는 게시글을 클라이언트로 전송\nconst BorrowBoard=()=>{\n    const [login, setLogin]=useState(''); // 현재 로그인 상태\n    const [showAddress, setShowAddress]=useState(''); //현재 사용자의 주소\n    const [searchText,setSearchText]=useState(''); //검색 input 창에 입력되는 text\n    const [lendYouList,setLendYouList]=useState([]); //빌려줄게요 리스트. 백엔드에서 가져온 데이터 담는 배열\n    const [borrowMeList,setBorrowMeList]=useState([]); //빌려주세요 리스트\n\n    const [fontStyle1, setFontStyle1]=useState({color: \"black\", fontWeight:\"bold\"});\n    const [fontStyle2, setFontStyle2]=useState({color: \"gray\"});\n    const [lendBtn,setLendBtn]=useState(true); //현재 빌려줄게요 게시판인지 확인\n    const [borrowBtn,setBorrowBtn]=useState(false); //현재 빌려주세요 게시판인지 확인\n    const [search,setSearch]=useState(false); //검색 버튼이 눌렸는지 확인하는 변수\n    const [filteredPost,setFilteredPost]=useState([]); //검색한 post 를 담는 배열\n    \n    const onClickMenu1 = (e) => {e.preventDefault(); setFontStyle1({color: \"black\", fontWeight:\"bold\"}); setFontStyle2({color: \"gray\"}); \n    setLendBtn(true); setBorrowBtn(false); setSearch(false); };\n    const onClickMenu2 = (e) => {e.preventDefault(); setFontStyle1({color: \"gray\"}); setFontStyle2({color: \"black\",  fontWeight:\"bold\"});\n    setBorrowBtn(true);  setLendBtn(false); setSearch(false); };\n    \n    // 유저 정보 가져오기\n    const getUser = () => {\n        return axios.get(\"http://localhost:7000/auth\", { withCredentials: true })\n    };\n    // 빌려줄게요 게시글 가져오기\n    const getLendYou = () => {\n        return axios.get(\"http://localhost:7000/post/lend\", { withCredentials: true })\n    };\n    // 빌려주세요 게시글 가져오기\n    const getBorrowMe = () => {\n        return axios.get(\"http://localhost:7000/post/borrow\", { withCredentials: true })\n    };\n    //각 게시판의 글을 가져올때 사용하는 통신입니다.\n    useEffect(() => {  //처음 페이지가 실행될 때, 로그인 상태바뀔때, 사용자 주소 바뀔때 실행됨\n        axios.all([getLendYou(), getBorrowMe(), getUser()]) // axios.all로 여러 개의 request를 보내고\n            .then(axios.spread((lendResp , borrowResp, user) => { // response를 spread로 받는다. \n                setLendYouList(lendResp.data);\n                setBorrowMeList(borrowResp.data);\n                if(user.data) {\n                    setShowAddress(user.data.address);\n                    setLogin(true);\n                } else {\n                    setLogin(false);\n                }\n            }))\n            .catch((error) => {\n                console.error(error)\n            })\n    }, []);\n    // ---------------------------------------------------\n    const searchChange=(e)=>{//검색창에 text 입력했을 때 입력한 text를 검색 text에 넣어줌\n        setSearchText(e.target.value);\n    };\n\n    const btnClick=()=>{ //검색창 버튼 클릭했을 때 뜨는 버튼\n        //filtered: 검색 결과 게시물들이 담기는 배열\n        if(lendBtn){\n            const filtered = lendYouList.filter((post) =>\n                post.email.toLowerCase().indexOf(searchText.toLowerCase()) > -1);\n            setFilteredPost(filtered);\n        console.log(filtered);\n        } else{\n            const filtered = borrowMeList.filter((post) =>\n                post.email.toLowerCase().indexOf(searchText.toLowerCase()) > -1);\n            setFilteredPost(filtered);\n            console.log(filtered);\n        }\n        setSearchText('');\n        setSearch(true);\n    };\n\n    const onKeyPress=(e)=>{\n        if(e.key ==='Enter'){\n            btnClick();\n        }\n    };\n\n    const numberWithCommas=(x)=> {\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    }\n    return(\n    <div>\n    <BoardNav showAddress={showAddress} login={login} boardName=\"게시판\"/>    \n    <Header className=\"site-layout-background\" style={{ padding: 0, background:'#ffffff',  fontSize:'30px' }}>\n            {React.createElement(collapsed ? LeftCircleTwoTone : RightCircleTwoTone, {\n              className: 'trigger',\n              onClick: toggle,\n            })}\n          </Header>\n    <PageStyled>\n        <br/>\n        <SearchBox>\n        <Input value={searchText} onChange={searchChange} onKeyPress={onKeyPress}/>\n        {searchText&&<StyledButton onClick={btnClick} color=\"#E5E5E5\"><Img src=\"img/search.png\" alt=\"검색\"/></StyledButton>}\n        {/* 검색창에 입력된 text 내용이 있을 경우 검색 버튼이 활성화됩니다. */}\n        </SearchBox>\n        <MenuStyled>\n        <a href=\"/\" onClick={onClickMenu1} style={fontStyle1}>빌려줄게요</a>\n        <a href=\"/\" onClick={onClickMenu2} style={fontStyle2}>빌려주세요</a>\n        </MenuStyled>\n        <hr></hr>\n    </PageStyled>\n    <List>\n    {(!search&&lendBtn)&&lendYouList.map((data) => { //빌려줄게요 게시판 \n        return (<Link to={`post/${data.id}`}>\n        <PostComponent2\n            image={data.img}\n            title={data.title}\n            postDate={data.date} \n            writerAddress={data.address} \n            startDate={data.start_date}\n            endDate={data.end_date}\n            cost={numberWithCommas(Number(data.price))}\n            key={data.id}\n            /></Link>);\n        }\n    )}\n    {(search&&lendBtn)&&filteredPost.map((data)=>{ //빌려줄게요 게시판에서 검색\n        return (<Link to={`post/${data.id}`}>\n        <PostComponent2\n            image={data.img}\n            title={data.title}\n            postDate={data.date} \n            writerAddress={data.address}  \n            startDate={data.start_date}\n            endDate={data.end_date}\n            cost={numberWithCommas(Number(data.price))}\n            key={data.id}\n            /></Link>);\n        }\n    )}\n    {(!search&&borrowBtn)&&borrowMeList.map((data)=> { //빌려주세요 게시판\n        return (<Link to={`post/${data.id}`}>\n        <PostComponent\n            title={data.title}\n            postDate={data.date} \n            writerAddress={data.address} \n            startDate={data.start_date}\n            endDate={data.end_date}\n            cost={numberWithCommas(Number(data.price))}\n            key={data.id}\n            /></Link>); \n        }\n    )}\n    {(search&&borrowBtn)&&filteredPost.map((data)=>{ //빌려주세요 게시판에서 검색\n        return (<Link to={`post/${data.id}`}>\n        <PostComponent\n            title={data.title}\n            postDate={data.date} \n            writerAddress={data.address} \n            startDate={data.start_date}\n            endDate={data.end_date}\n            cost={numberWithCommas(Number(data.price))}\n            key={data.id}\n            /></Link>);\n        }\n    )}\n    </List>\n    </div>\n    );\n};\n\nexport default BorrowBoard;\nexport {StyledButton};"]},"metadata":{},"sourceType":"module"}